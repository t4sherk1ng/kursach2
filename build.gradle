/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.springframework.boot" version "3.2.5"
    id "org.springdoc.openapi-gradle-plugin" version "1.9.0"
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-parameters")
}

dependencies {
    api libs.org.springframework.boot.spring.boot.starter
    api libs.org.springframework.boot.spring.boot.starter.data.jpa
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.org.yaml.snakeyaml
    api libs.org.projectlombok.lombok
    api libs.org.postgresql.postgresql
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.5'
    testImplementation libs.junit.junit
    testImplementation libs.org.junit.jupiter.junit.jupiter
    testImplementation libs.org.springframework.boot.spring.boot.test.autoconfigure
    testImplementation libs.org.springframework.boot.spring.boot.starter.test
    testImplementation libs.org.junit.jupiter.junit.jupiter.api
    testImplementation libs.org.junit.jupiter.junit.jupiter.engine
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    runtimeOnly 'org.postgresql:postgresql'
    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.15.2'
    implementation 'ai.catboost:catboost-prediction:1.2.5'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation("org.modelmapper:modelmapper:2.1.1")
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'kursach2'


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/t4sherk1ng/kursach2"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}
